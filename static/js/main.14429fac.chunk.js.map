{"version":3,"sources":["redux/constants/index.js","redux/reducers/messagesReducer.js","redux/store.js","redux/actions/messagesAction.js","redux/operations/messagesOperations.js","Components/Section/Section.js","Components/MessageForm/MessageForm.js","Components/MessageItem/MessageItem.js","redux/selectors/messages-selectors.js","Components/Messages/Messages.js","App.js","index.js"],"names":["ADD_MESSAGE_REQUEST","ADD_MESSAGE_SUCCESS","ADD_MESSAGE_ERROR","FETCH_MESSAGES_REQUEST","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_ERROR","CHANGE_FILTER","CHANGE_ERROR","items","createReducer","state","payload","filter","error","loading","combineReducers","store","configureStore","reducer","messages","messagesReducer","middleware","getDefaultMiddleware","addMessageRequest","createAction","addMessageSuccess","addMessageError","fetchMessagesRequest","fetchMessagesSuccess","fetchMessagesError","changeFilter","changeError","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","name","text","time","dispatch","messagesAction","collection","add","then","data","id","catch","get","arr","forEach","doc","push","H1","transition","h1","attrs","unmountOnExit","mountOnEntry","timeout","Div","styled","div","Section","title","children","useState","showTitle","setShowTitle","useEffect","in","defaultProps","Form","form","Label","label","LabelSpan","span","Input","input","TextArea","textarea","Button","button","formInitialState","MessageForm","useDispatch","setForm","handlerInputChange","e","target","value","prev","handlerSubmit","preventDefault","date","Date","messagesOperations","toLocaleString","month","day","hour","minute","second","autoComplete","onSubmit","type","autoFocus","maxLength","required","onChange","onKeyDown","keyCode","P","p","DATE_SPAN","NAME_SPAN","connect","ownProps","item","find","message","messagesSelector","filterSelector","getVisibleMessages","createSelector","toLowerCase","includes","MessagesDiv","Ul","ul","Li","li","Messages","useSelector","TransitionGroup","component","map","App","errorSelector","loaderSelector","setTimeout","className","color","height","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14429fac.chunk.js","sourcesContent":["export const ADD_MESSAGE_REQUEST = \"messages/addMessageRequest\";\nexport const ADD_MESSAGE_SUCCESS = \"messages/addMessageSuccess\";\nexport const ADD_MESSAGE_ERROR = \"messages/addMessageError\";\n\nexport const FETCH_MESSAGES_REQUEST = \"messages/fetchMessagesRequest\";\nexport const FETCH_MESSAGES_SUCCESS = \"messages/fetchMessagesSuccess\";\nexport const FETCH_MESSAGES_ERROR = \"messages/fetchMessagesError\";\n\nexport const CHANGE_FILTER = \"filter/change\";\nexport const CHANGE_ERROR = \"error/change\";\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  ADD_MESSAGE_REQUEST,\n  ADD_MESSAGE_SUCCESS,\n  ADD_MESSAGE_ERROR,\n  FETCH_MESSAGES_REQUEST,\n  FETCH_MESSAGES_SUCCESS,\n  FETCH_MESSAGES_ERROR,\n  CHANGE_FILTER,\n  CHANGE_ERROR,\n} from \"../constants\";\n\nconst items = createReducer([], {\n  [FETCH_MESSAGES_SUCCESS]: (state, { payload }) => payload,\n  [ADD_MESSAGE_SUCCESS]: (state, { payload }) => [...state, payload],\n});\n\nconst filter = createReducer(\"\", {\n  [CHANGE_FILTER]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(\"\", {\n  [CHANGE_ERROR]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [ADD_MESSAGE_REQUEST]: () => true,\n  [ADD_MESSAGE_SUCCESS]: () => false,\n  [ADD_MESSAGE_ERROR]: () => false,\n  [FETCH_MESSAGES_REQUEST]: () => true,\n  [FETCH_MESSAGES_SUCCESS]: () => false,\n  [FETCH_MESSAGES_ERROR]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport messagesReducer from \"./reducers/messagesReducer\";\n\nconst store = configureStore({\n  reducer: {\n    messages: messagesReducer,\n  },\n  middleware: [...getDefaultMiddleware()],\n});\n\nexport default store;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nimport {\n  ADD_MESSAGE_REQUEST,\n  ADD_MESSAGE_SUCCESS,\n  ADD_MESSAGE_ERROR,\n  FETCH_MESSAGES_REQUEST,\n  FETCH_MESSAGES_SUCCESS,\n  FETCH_MESSAGES_ERROR,\n  CHANGE_FILTER,\n  CHANGE_ERROR,\n} from \"../constants\";\n\nconst addMessageRequest = createAction(ADD_MESSAGE_REQUEST);\nconst addMessageSuccess = createAction(ADD_MESSAGE_SUCCESS);\nconst addMessageError = createAction(ADD_MESSAGE_ERROR);\n\nconst fetchMessagesRequest = createAction(FETCH_MESSAGES_REQUEST);\nconst fetchMessagesSuccess = createAction(FETCH_MESSAGES_SUCCESS);\nconst fetchMessagesError = createAction(FETCH_MESSAGES_ERROR);\n\nconst changeFilter = createAction(CHANGE_FILTER);\nconst changeError = createAction(CHANGE_ERROR);\n\nexport default {\n  addMessageRequest,\n  addMessageSuccess,\n  addMessageError,\n  fetchMessagesRequest,\n  fetchMessagesSuccess,\n  fetchMessagesError,\n  changeFilter,\n  changeError,\n};\n","import firebase from \"firebase\";\nimport messagesAction from \"../actions/messagesAction\";\n\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp({\n  apiKey: API_KEY,\n  authDomain: \"zl-guestbook.firebaseapp.com\",\n  databaseURL:\n    \"https://zl-guestbook-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"zl-guestbook\",\n  storageBucket: \"zl-guestbook.appspot.com\",\n  messagingSenderId: \"89312408301\",\n  appId: \"1:89312408301:web:9f5eacc624dc4250c252e4\",\n});\n\nvar db = firebase.firestore();\n\nconst addMessage = (name, text, time) => (dispatch) => {\n  dispatch(messagesAction.addMessageRequest());\n\n  db.collection(\"messages\")\n    .add({\n      name,\n      text,\n      time,\n    })\n    .then((data) =>\n      dispatch(\n        messagesAction.addMessageSuccess({ id: data.id, name, text, time })\n      )\n    )\n    .catch((error) => dispatch(messagesAction.addMessageError(error)));\n};\n\nconst fetchMessages = () => (dispatch) => {\n  dispatch(messagesAction.fetchMessagesRequest());\n\n  db.collection(\"messages\")\n    .get()\n    .then((data) => {\n      const arr = [];\n      data.forEach((doc) => arr.push({ id: doc.id, ...doc.data() }));\n      dispatch(messagesAction.fetchMessagesSuccess(arr));\n    })\n    .catch((error) => dispatch(messagesAction.fetchMessagesError(error)));\n};\n\nexport default {\n  addMessage,\n  fetchMessages,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport transition from \"styled-transition-group\";\nimport styled from \"styled-components\";\n\nconst H1 = transition.h1.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 500,\n})`\n  margin-top: 0;\n  margin-bottom: 20px;\n\n  text-align: center;\n  color: #3645ab;\n\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 22px;\n\n  &:enter { opacity: 0; }\n  &:enter-active {\n    opacity: 1;\n    transition: opacity 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1; }\n  &:exit-active {\n    opacity: 0;\n    transition: opacity 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst Div = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  width: 100%;\n`;\n\nconst Section = ({ title, children }) => {\n  const [showTitle, setShowTitle] = useState(false);\n  useEffect(() => {\n    setShowTitle(true);\n  }, []);\n\n  return (\n    <Div>\n      <H1 in={showTitle}>{title}</H1>\n      <div>{children}</div>\n    </Div>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n\nSection.defaultProps = {\n  title: \"Title template\",\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport messagesOperations from \"../../redux/operations/messagesOperations\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 100%;\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n\n  @media (min-width: 480px) {\n    width: 360px;\n  }\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 100%;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst TextArea = styled.textarea`\n  display: block;\n  margin: 0 auto;\n  resize: none;\n  padding: 5px 10px;\n  width: 100%;\n  height: 180px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Button = styled.button`\n  display: block;\n  margin: 0 auto;\n\n  padding: 11px 20px;\n\n  width: 100%;\n  min-height: 44px;\n\n  border-radius: 10px;\n  border: 2px solid transparent;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.22;\n\n  text-align: center;\n  text-transform: uppercase;\n\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-image 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-image: linear-gradient(47.73deg, #6368e5 15.48%, #b884f3 81.25%);\n  background-position: center;\n  background-size: calc(100% + 4px);\n\n  color: #ffffff;\n\n  @media (min-width: 480px) {\n    min-width: 240px;\n    padding: 11px 78px;\n  }\n\n  &:hover,\n  &:focus {\n    border: 2px solid #6368e5;\n    color: #6368e5;\n    background-image: none;\n    background-color: #ffffff;\n  }\n`;\n\nconst formInitialState = {\n  name: \"\",\n  text: \"\",\n};\n\nconst MessageForm = () => {\n  const dispatch = useDispatch();\n  const [{ name, text }, setForm] = useState({ ...formInitialState });\n\n  const handlerInputChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !text) {\n      return;\n    }\n    const date = new Date();\n    var options = {\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    };\n    dispatch(\n      messagesOperations.addMessage(\n        name,\n        text,\n        date.toLocaleString(\"ru\", options)\n      )\n    );\n    setForm({ ...formInitialState });\n  };\n\n  const handlerInputSubmit = (e) => {\n    if (e.keyCode === 13) {\n      handlerSubmit(e);\n    }\n  };\n\n  return (\n    <Form autoComplete=\"on\" onSubmit={handlerSubmit}>\n      <Label>\n        <LabelSpan>Name</LabelSpan>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          autoFocus\n          maxLength=\"15\"\n          required\n          onChange={handlerInputChange}\n        />\n      </Label>\n      <Label>\n        <LabelSpan>Message</LabelSpan>\n        <TextArea\n          type=\"text\"\n          name=\"text\"\n          value={text}\n          required\n          onChange={handlerInputChange}\n          onKeyDown={handlerInputSubmit}\n        />\n      </Label>\n      <Button type=\"submit\">Send message</Button>\n    </Form>\n  );\n};\n\nexport default MessageForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst P = styled.p`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0;\n\n  word-break: break-word;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst DATE_SPAN = styled.span`\n  display: inline-block;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n\n  margin-right: 10px;\n\n  color: #6368e5;\n`;\nconst NAME_SPAN = styled.span`\n  display: inline-block;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\n\nconst MessageItem = ({ name, text, time }) => {\n  return (\n    <>\n      <P>\n        <DATE_SPAN>{time}</DATE_SPAN>\n        <NAME_SPAN>{name}</NAME_SPAN>\n        <br />\n        {text}\n      </P>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = state.messages.items.find(\n    (message) => message.id === ownProps.id\n  );\n  return { ...item };\n};\n\nexport default connect(mapStateToProps)(MessageItem);\n\nMessageItem.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import { createSelector } from \"reselect\";\n\nexport const messagesSelector = (state) => state.messages;\nexport const allMessagesSelector = (state) => messagesSelector(state).items;\nexport const errorSelector = (state) => messagesSelector(state).error;\nexport const filterSelector = (state) => messagesSelector(state).filter;\nexport const loaderSelector = (state) => messagesSelector(state).loading;\n\nexport const getVisibleMessages = createSelector(\n  [allMessagesSelector, filterSelector],\n  (messages, filter) => {\n    return messages.filter((message) =>\n      message.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport messagesAction from \"../../redux/actions/messagesAction\";\nimport MessageItem from \"../MessageItem/MessageItem\";\nimport styled from \"styled-components\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport transition from \"styled-transition-group\";\nimport {\n  getVisibleMessages,\n  filterSelector,\n} from \"../../redux/selectors/messages-selectors\";\n\nconst MessagesDiv = styled.div`\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 25px;\n\n  width: 100%;\n\n  background: #fff;\n  border: 2px solid #212121;\n  border-radius: 10px;\n\n  @media (min-width: 480px) {\n    width: 360px;\n  }\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 0;\n  margin-bottom: 15px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 17px;\n`;\nconst LabelSpan = styled.span`\n  display: block;\n  margin-left: 15px;\n`;\nconst Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 100%;\n  height: 40px;\n  background: #fff;\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n`;\nconst Ul = styled.ul`\n  padding: 0;\n  list-style: none;\n`;\nconst Li = transition.li.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 250,\n})`\n  display: flex;\n  padding: 5px 10px;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #f1f1f1;\n\n  border: 1px solid #b3b3b3;\n  border-radius: 10px;\n\n  &:enter { opacity: 0; \n    transform: translateX(-100%); }\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1;\n  transform: translateX(0); }\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst Messages = () => {\n  const dispatch = useDispatch();\n  const messages = useSelector((state) => getVisibleMessages(state));\n  const filter = useSelector((state) => filterSelector(state));\n\n  return (\n    <MessagesDiv>\n      <Label>\n        <LabelSpan>Find messages by name</LabelSpan>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={filter}\n          onChange={(e) =>\n            dispatch(messagesAction.changeFilter(e.target.value))\n          }\n        />\n      </Label>\n      <TransitionGroup component={Ul}>\n        {messages.map((message) => (\n          <Li key={message.id}>\n            <MessageItem id={message.id} />\n          </Li>\n        ))}\n      </TransitionGroup>\n    </MessagesDiv>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport messagesAction from \"./redux/actions/messagesAction\";\nimport messagesOperations from \"./redux/operations/messagesOperations\";\nimport Section from \"./Components/Section/Section\";\nimport MessageForm from \"./Components/MessageForm/MessageForm\";\nimport Messages from \"./Components/Messages/Messages\";\nimport transition from \"styled-transition-group\";\nimport Loader from \"react-loader-spinner\";\nimport {\n  loaderSelector,\n  errorSelector,\n} from \"./redux/selectors/messages-selectors\";\n\nconst Div = transition.div.attrs({\n  unmountOnExit: true,\n  mountOnEntry: true,\n  timeout: 250,\n})`\nposition: absolute;\npadding: 5px 10px;\nwidth: 300px;\n\ntop: 10px;\nleft: 10px;\n\nbackground-color: #6368e5;\nborder-radius: 8px;\n\ntext-align: center;\ncolor: white;\n\n  &:enter { opacity: 0; \n    transform: translateX(-100%); }\n  &:enter-active {\n    opacity: 1;\n    transform: translateX(0);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:exit { opacity: 1;\n  transform: translateX(0); }\n  &:exit-active {\n    opacity: 0;\n    transform: translateX(-100%);\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1), transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const error = useSelector((state) => errorSelector(state));\n  const loading = useSelector((state) => loaderSelector(state));\n\n  useEffect(() => {\n    dispatch(messagesOperations.fetchMessages());\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        dispatch(messagesAction.changeError(\"\"));\n      }, 1500);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {loading && (\n        <Loader\n          className=\"Loader\"\n          type=\"Puff\"\n          color=\"#6368e5\"\n          height={100}\n          width={100}\n        />\n      )}\n      {\n        <Div in={!!error}>\n          <p>{error}</p>\n        </Div>\n      }\n      <Section title={\"GuestBook\"}>\n        <MessageForm />\n      </Section>\n      <Section title={\"Messages\"}>\n        <Messages />\n      </Section>\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}